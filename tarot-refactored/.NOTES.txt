Firestore:

.Old data stored in firebase has cards's URL property set to google drive for padilha and astrolink to Rider Waite. Padilha paths are corrected, because google drive will no longer be able to share images as chrome will not support third party cookies, but old Rider Waite URL paths are still active.

EditCard:

. Every new feature that involves new properties to the card object must be added to the "cardToEditKeys" filter variable in "cardToEditAccordion" so it is not shown to the user in the accordion.

ReadingTable.tsx: 

. displayReading: 

    Do not display cards from readings saved on server, their meanings should always come from UEC or CardsDatabase (defaultChart), because user may have recently modified its meanings in UEC and server reading cards ARE NOT UPDATED when UEC change and card data will be stale! Also, old server data readings don't have the new "edited:boolean" property, and all server UEC queries must be by card name. Update all charts on server would increase the number of server requests dramatically! Change server database structure and shorten the number of card properties would put massive data from old Tarot project (before refactoring) at risk.

SearchFilters.tsx: 

  setSearchParams: Using "prev" to prevent typescript issues in changing URL state with new object directly. SortByDate function in readingList.tsx will also have undesired results if the other properties are not specified, specially startDate and endDate, because null or undefined in url are strings and not values, causing its variables to be truthy and not falsy as it should be.

REFACTORING: 

. CHECAR SE EDITCARD PODE USAR ReadingCards.handleUECCards, CASO SIM REUTILIZAR A FUNÃ‡AO.
. MANEIRA DE CRIAR LOADING QUANDO SELECIONAR NOVA LEITURA

. The values passed as props to Providers in contexts should be memoized
. useState() updater function (setSomething()) is stable, so React does not require it in dependency arrays, remove it where necessary.